name: Release
on:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
env:
  REGISTRY: ghcr.io/sovereigncloudstack
  metadata_flavor: latest=true
  metadata_tags: type=ref,event=tag
permissions:
  contents: write
  packages: write
  # Required to generate OIDC tokens for `sigstore/cosign-installer` authentication
  id-token: write
jobs:
  manager-image:
    name: Build and push manager image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-go
      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3

      - name: Generate metadata cso
        id: metacso
        uses: ./.github/actions/metadata
        env:
          IMAGE_NAME: cso
        with:
          metadata_flavor: ${{ env.metadata_flavor }}
          metadata_tags: ${{ env.metadata_tags }}

      - name: Login to ghcr.io for CI
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 # v3.5.0

      - name: Install Bom
        shell: bash
        run: |
          curl -L https://github.com/kubernetes-sigs/bom/releases/download/v0.6.0/bom-amd64-linux -o bom
          sudo mv ./bom /usr/local/bin/bom
          sudo chmod +x /usr/local/bin/bom

      - name: Setup Env
        run: |
          DOCKER_BUILD_LDFLAGS="$(hack/version.sh)"
          echo 'DOCKER_BUILD_LDFLAGS<<EOF' >> $GITHUB_ENV
          echo $DOCKER_BUILD_LDFLAGS >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Build and push cso image
        uses: docker/build-push-action@31159d49c0d4756269a0940a750801a1ea5d7003 # v6
        id: docker_build_release_cso
        with:
          provenance: false
          context: .
          file: ./images/cso/Dockerfile
          push: true
          build-args: |
            LDFLAGS=${{ env.DOCKER_BUILD_LDFLAGS }}
          tags: ${{ steps.metacso.outputs.tags }}
          labels: ${{ steps.metacso.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, mode=max, scope=${{ github.workflow }}

      - name: Sign Container Images
        run: |
          cosign sign --yes ghcr.io/sovereigncloudstack/cso@${{ steps.docker_build_release_cso.outputs.digest }}

      - name: Generate SBOM CSO
        shell: bash
        # To-Do: generate SBOM from source after https://github.com/kubernetes-sigs/bom/issues/202 is fixed
        run: |
          bom generate --format=json -o sbom_ci_main_cso_${{ steps.metacso.outputs.version }}-spdx.json \
          --image=ghcr.io/sovereigncloudstack/cso:${{ steps.metacso.outputs.version }}

      - name: Attest SBOM to Container Images cso
        run: |
          cosign attest --yes --type=spdxjson --predicate sbom_ci_main_cso_${{ steps.metacso.outputs.version }}-spdx.json ghcr.io/sovereigncloudstack/cso@${{ steps.docker_build_release_cso.outputs.digest }}

      - name: Sign SBOM Images cso
        run: |
          docker_build_release_digest="${{ steps.docker_build_release_cso.outputs.digest }}"
          image_name="ghcr.io/sovereigncloudstack/cso:${docker_build_release_digest/:/-}.sbom"
          docker_build_release_sbom_digest="sha256:$(docker buildx imagetools inspect --raw ${image_name} | sha256sum | head -c 64)"
          cosign sign --yes "ghcr.io/sovereigncloudstack/cso@${docker_build_release_sbom_digest}"

      - name: Image Releases digests cso
        shell: bash
        run: |
          mkdir -p image-digest/
          echo "ghcr.io/sovereigncloudstack/cso:{{ steps.metacso.outputs.version }}@${{ steps.docker_build_release_cso.outputs.digest }}" >> image-digest/cso.txt

      # Upload artifact digests
      - name: Upload artifact digests
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: image-digest cso
          path: image-digest
          retention-days: 90

      - name: Image Digests Output
        shell: bash
        run: |
          cd image-digest/
          find -type f | sort | xargs -d '\n' cat

  release:
    name: Create draft release
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: write
    defaults:
      run:
        shell: bash
    needs:
      - manager-image
    steps:
      - name: Set env
        shell: bash
        run: echo "RELEASE_TAG=${GITHUB_REF:10}" >> $GITHUB_ENV

      - name: checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 0


      - uses: ./.github/actions/setup-go

      - name: install kustomize
        run: |
          make kustomize

      - name: generate release artifacts
        run: |
          make release

      - name: generate release notes
        run: |
          make release-notes

      - name: Release
        uses: softprops/action-gh-release@a74c6b72af54cfa997e81df42d94703d6313a2d0 # v2
        with:
          draft: true
          files: out/*
          body_path: _releasenotes/${{ env.RELEASE_TAG }}.md
