---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: clusteraddons.clusterstack.x-k8s.io
spec:
  group: clusterstack.x-k8s.io
  names:
    kind: ClusterAddon
    listKind: ClusterAddonList
    plural: clusteraddons
    singular: clusteraddon
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.ownerReferences[?(@.kind=="Cluster")].name
      name: Cluster
      type: string
    - description: Present running hook
      jsonPath: .spec.hook
      name: Hook
      type: string
    - jsonPath: .status.ready
      name: Ready
      type: boolean
    - description: Time duration since creation of Cluster Addon
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterAddon is the schema for the clusteraddons API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterAddonSpec defines the desired state of a ClusterAddon
              object.
            properties:
              clusterRef:
                description: |-
                  ClusterRef is the reference to the clusterv1.Cluster object that corresponds to the workload cluster where this
                  controller applies the cluster addons.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              clusterStack:
                description: |-
                  ClusterStack is the full string <provider>-<name>-<Kubernetes version>-<version> that will be filled with the cluster stack that
                  the respective cluster uses currently. It always matches cluster.spec.topology.class if the work of this controller is done.
                type: string
              hook:
                description: Hook specifies the runtime hook for the Cluster event.
                type: string
              version:
                description: Version is the version of the cluster addons that have
                  been applied in the workload cluster.
                type: string
            required:
            - clusterRef
            type: object
          status:
            description: ClusterAddonStatus defines the observed state of ClusterAddon.
            properties:
              conditions:
                description: Conditions define the current service state of the ClusterAddon.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              helmChartStatus:
                additionalProperties:
                  description: HelmChartStatusConditions defines the status of helm
                    chart in the cluster addon.
                  type: string
                description: HelmChartStatus defines the status of helm chart in the
                  cluster addon.
                type: object
              ready:
                default: false
                type: boolean
              resources:
                description: Resources specifies the status of the resources that
                  this object administrates.
                items:
                  description: Resource defines the status of a resource.
                  properties:
                    error:
                      description: Error specifies the error of the last time this
                        object has been applied.
                      type: string
                    group:
                      description: Group specifies the group of the object.
                      type: string
                    kind:
                      description: Kind specifies the kind of the object.
                      type: string
                    name:
                      description: Name specifies the name of the object.
                      type: string
                    namespace:
                      description: Namespace specifies the namespace of the object.
                      type: string
                    status:
                      description: Status specifies the status of the object being
                        applied.
                      type: string
                    version:
                      description: Version specifies the version of the object.
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
